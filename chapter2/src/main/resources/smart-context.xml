<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

    <!-- 扫描类包，将标注Spring注解的类自动转化Bean，同时完成Bean的注入 -->
    <context:component-scan base-package="com.smart.dao"/>
    <context:component-scan base-package="com.smart.service"/>

     <!--配置数据源-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close"
		p:driverClassName="com.mysql.jdbc.Driver"
		p:url="jdbc:mysql://localhost:3306/wxz"
		p:username="root"
		p:password="123456" />

	<!-- 配置Jdbc模板  -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
		p:dataSource-ref="dataSource" />

    <!--                        老 MQ 接 入 方 式                     -->
    <bean name="myPublish" class="com.zhubajie.messagequeuesdk.publisher.Publisher" init-method="init" >
        <property name="bizId">
            <value>201805290001</value>
        </property>
    </bean>

    <bean name="userListener" class="com.smart.service.OldListener" />
    <bean name="userManager" class="com.zhubajie.messagequeuesdk.consumer.ConsumeManager" init-method="start" >
        <property name="queue">
            <value>wxz01Queue_201805290002</value>
        </property>
        <property name="bizId">
            <value>201805290002</value>
        </property>
        <property name="listener" ref="userListener" />
    </bean>

    <bean name="userManager2" class="com.zhubajie.messagequeuesdk.consumer.ConsumeManager" init-method="start" >
        <property name="queue">
            <value>wxz02Queue_201805290002</value>
        </property>
        <property name="bizId">
            <value>201805290002</value>
        </property>
        <property name="listener" ref="userListener" />
    </bean>


    <!--                        新 MQ 接 入 方 式                    -->
    <bean id="testPublish" class="com.rabbitmq.client.api.publisher.PublisherClient" init-method="init">
        <property name="pubModuleUserName">
            <value>wxzpub10</value>
        </property>
        <property name="pubModulePassword">
            <value>Ddo0sv</value>
        </property>
        <property name="vhost">
            <value>wxzpub10</value>
        </property>
    </bean>

    <bean id="listener" class="com.smart.service.Listener"/>
    <bean id="testConsumer" class="com.rabbitmq.client.api.consumer.ConsumerClient" init-method="start">
        <property name="vhost">
            <value>wxzpub10</value>
        </property>
        <property name="userName">
            <value>jxy529</value>
        </property>
        <property name="password">
            <value>egvsft</value>
        </property>
        <property name="queue">
            <value>jxy529queue_262</value>
        </property>
        <property name="listener" ref="listener"/>
    </bean>

    <bean id="testConsumer10" class="com.rabbitmq.client.api.consumer.ConsumerClient" init-method="start">
        <property name="vhost">
            <value>wxzpub10</value>
        </property>
        <property name="userName">
            <value>wxzpub10</value>
        </property>
        <property name="password">
            <value>Ddo0sv</value>
        </property>
        <property name="queue">
            <value>jk04__258</value>
        </property>
        <property name="listener" ref="listener"/>
    </bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />

	<!-- 通过AOP配置提供事务增强，让service包下所有Bean的所有方法拥有事务 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="serviceMethod"
			expression="(execution(* com.smart.service..*(..))) and (@annotation(org.springframework.transaction.annotation.Transactional))" />
		<aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice" />
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
</beans>